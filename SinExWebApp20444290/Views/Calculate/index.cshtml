@model SinExWebApp20444290.ViewModels.FeeViewModel

@{
    ViewBag.Title = "Ship";
}

<h2>Make Shipment</h2>
<hr />

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script>
        $(document).ready(function () {
            //$('<div/>', {
              //  'class': 'extraPerson', html: GetHtml()
            //}).appendTo('#container'); //Get the html from template
            $('#addRow').click(function () {
                if ($(".counter").length < 10) {
                    console.log($(".clone").length);
                    $('<div/>', {
                        'class': 'extraPerson', html: GetHtml()
                    }).hide().appendTo('#container').slideDown('slow');//Get the html from template and hide and slideDown for transtion.

                }
            });
        })
        function GetHtml() //Get the template and update the input field names
        {
            var len = $('.extraPerson').length;
            var $html = $('.clone').clone();
            return $html.html();
        }
</script>

@using (Html.BeginForm("Index", "Calculate", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h3>Shipping Address</h3>
        <hr />
        <div class="form-group">
            @Html.LabelFor(a => a.recipientName, "Recipient Name: ", new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(a => a.recipientName, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.recipientName } })
                @Html.ValidationMessageFor(a => a.recipientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(a => a.recipientAddress, "Recipient Address: ", new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(a => a.recipientAddress, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.recipientAddress } })
                @Html.ValidationMessageFor(a => a.recipientAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(a => a.recipientEmail, "Recipient Email: ", new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(a => a.recipientEmail, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.recipientEmail } })
                @Html.ValidationMessageFor(a => a.recipientEmail, "", new { @class = "text-danger" })
            </div>
        </div>

            <h3>Shipment</h3>
            <hr />

            <div class="form-group">
                @Html.LabelFor(a => a.origin, "Origin: ", new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DropDownListFor(a => a.origin, Model.param.origins, "Please select...", new { @class = "form-control", Value = ViewBag.currentOrigin })
                    @Html.ValidationMessageFor(a => a.origin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(a => a.destination, "Destination: ", new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DropDownListFor(a => a.destination, Model.param.destinations, "Please select...", new { @class = "form-control", Value = ViewBag.currentDestination })
                    @Html.ValidationMessageFor(a => a.destination, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(a => a.serviceType, "Service Type: ", new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DropDownListFor(a => a.serviceType, Model.param.serviceTypes, "Please select...", new { @class = "form-control", Value = ViewBag.currentServiceType })
                    @Html.ValidationMessageFor(a => a.serviceType, "", new { @class = "text-danger" })
                </div><br />
            </div>
            <div class="form-group">
                @Html.LabelFor(a => a.currencyCode, "Currency: ", new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DropDownListFor(a => a.currencyCode, Model.param.currencies, "Please select...", new { @class = "form-control", Value = ViewBag.currentCurrencyCode })
                    @Html.ValidationMessageFor(a => a.currencyCode, "", new { @class = "text-danger" })
                </div><br />
            </div>

            <h3>Packages</h3>
            <hr />
            <div id="packageList">
                @for (int i = 0; i < Model.packages.Count; i++)
                {
                    <div class="packageRow col-md-12">

                        <div class="clone">
                            <span class="counter"></span>
                            @Html.LabelFor(a => a.packages[i].packageType, "Package Type: ", new { @class = "control-label col-md-1" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(a => a.packages[i].packageType, Model.param.packageTypes, "Please select...", new { @class = "form-control", Value = ViewBag.currentPackageType, id = "packageTypes_ddl", onchange = "+OnPackageTypesChange(this)", about = i })
                                @Html.ValidationMessageFor(a => a.packages[i].packageType, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(a => a.packages[i].size, "Size: ", new { @class = "control-label col-md-1" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(a => a.packages[i].size, Model.param.sizes, "Please select...", new { @class = "form-control", Value = ViewBag.currentPackageSize, id = "packageTypes_ddl", onchange = "+OnPackageTypesChange(this)", about = i })
                                @Html.ValidationMessageFor(a => a.packages[i].size, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(a => a.packages[i].weight, "Weight(kg): ", new { @class = "control-label col-md-1" })
                            <div class="col-md-2">
                                @Html.EditorFor(a => a.packages[i].weight, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.currentWeight } })
                                @Html.ValidationMessageFor(a => a.packages[i].weight, "", new { @class = "text-danger" })
                            </div>
                            <br />
                            <br />
                            <br />
                        </div>
                        <div id="container"></div>

                        <a href="#" id="addRow"><i class="icon-plus-sign icon-white"></i>Add package</a><br /><br />

                    </div>
                }
            </div>

        </div>
        <input class="btn btn-primary" type="submit" value="Index" />
}